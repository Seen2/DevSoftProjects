import React from 'react';
import {StyleSheet, Button, Image, View,KeyboardAvoidingView,TouchableOpacity,TextInput,Text } from 'react-native';
import { ImagePicker,Constants } from 'expo';
import Ionicons from "react-native-vector-icons/Ionicons";

export default class IntroductionScreen extends React.Component {
  static navigationOptions=({navigation})=>({
    headerTitle:"Introduction",
    headerTintColor:'#2dbabc',
  })
  
  state = {
      name:'',
      image: null,
      description:null,
      imgUpload:'false',
	};

  nameChange= name =>this.setState({name})
  descriptionChange= description =>this.setState({description})


  render() {
     let { image } = this.state;

	 return (
	 		<View>
			<TouchableOpacity style={styles,img} onPress={this.pickImage}>
			{!image?<Ionicons
				
				name={`ios-person-add${false ? "" : "-outline"}`}
				size={50}
				color="#2dbabc"
			/>
			: <Image source={{ uri: image }} style={{ width: 100, height: 100 }} />}
			</TouchableOpacity>
			<Text style={styles.texts}>Your name {'\n'}</Text>
			
			<KeyboardAvoidingView  behaviour="height" enable >
				<TextInput
					style={{height: 30, borderColor: '#2dbabc', borderWidth: 1}}
					onChangeText={this.nameChange}
					value={this.state.name}
					placeholder='Name'
				/>
				<Text style={styles.texts}>{'\nWrite a short description'}</Text>

				<TextInput
					style={{height: 60, borderColor: '#2dbabc', borderWidth: 1}}
					onChangeText={this.descriptionChange}
					value={this.state.description}
					placeholder='May be you can write about your goal and motivation'
					multiline={true}
				/>


			  <Button 
				title='proceed' 
				onPress={()=>this.props.navigation.navigate('personalInformation',{user:this.state})}
				color='#2dbabc'
			  />
       			</KeyboardAvoidingView>
		</View>
		);

		}

   pickImage = async () => {
   let result = await ImagePicker.launchImageLibraryAsync({
   allowsEditing: true,	
   aspect: [4, 3],
   });	
  // console.log(result);		
   if (!result.cancelled) {

	this.setState({ image: result.uri });
	this.setState({imgUpload:true})
	//console.log(this.state.imgUpload)
	}
	
	};

}

const styles=StyleSheet.create({
img: {
   borderWidth:10,
   borderHeight:10,
   borderRadius:7,            
	},
container: {
    flex: 1,
    paddingTop: Constants.statusBarHeight,
    backgroundColor: '#eff2f2',

  },
  color:{
    borderColor:'red'
  },

  texts:{
    //textAlign: 'center',
    color:'#000f0f',
    fontSize:18,
    },
    icon:{
   
    },
})
